name: Rust

on:
  push:
    branches: [master, test_*]
  pull_request:
    branches: [master]
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        # os: [ windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Python - Install 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: .NET - Install
        if: runner.os == 'Linux'
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "8.x"
      - name: Python - Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cffi pytest
      - name: Rust - Build
        run: cargo build --verbose
      - name: Rust - Style
        run: cargo fmt --check
      - name: Rust - Clippy
        run: cargo clippy -- -D warnings
      - name: Rust - Test
        run: cargo test --verbose
