// Automatically generated by Interoptopus.

using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using My.Company;

namespace My.Company
{
    public static partial class InteropClass
    {
        public const string NativeLib = "example_complex";

        /// Call for a friend.
        public const uint THE_MAGIC_CONSTANT = 666;


        /// Returns the version of this API.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_api_version")]
        public static extern uint example_api_version();

        /// A function that always fails.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_always_fails")]
        public static extern FFIError example_always_fails();

        /// Creates a new instance of this library.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_create_context")]
        public static extern FFIError example_create_context(out IntPtr context_ptr);

        /// Deletes an existing instance of this library.
        /// 
        /// You **must** ensure that `context_ptr` is being called with the context produced by
        /// `example_create_context`, otherwise bad things will happen.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_destroy_context")]
        public static extern FFIError example_destroy_context(out IntPtr context_ptr);

        /// Prints the current player score.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_print_score")]
        public static extern FFIError example_print_score(IntPtr context);

        /// Updates the score.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_return_score")]
        public static extern FFIError example_return_score(IntPtr context, out uint score);

        /// Updates the score.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_update_score_by_callback")]
        public static extern FFIError example_update_score_by_callback(IntPtr context, InteropDelegate_fn_u32_rval_u32 update);

        /// Accepts some foreign types.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_write_foreign_type")]
        public static extern FFIError example_write_foreign_type(IntPtr context, ref WithForeignType foreign);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "example_double_super_complex_entity")]
        public static extern FFIError example_double_super_complex_entity(IntPtr context, ref SuperComplexEntity incoming, out SuperComplexEntity outgoing);

    }

    /// Possible errors in our library.
    public enum FFIError
    {
        /// All went fine.
        Ok = 0,
        /// Naughty API call detected.
        NullPointerPassed = 10,
    }

    /// A vector used in our game engine.
    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct SuperComplexEntity
    {
        public Vec3 player_1;
        public Vec3 player_2;
        public ulong ammo;
        /// Point to an ASCII encoded whatnot.
        public IntPtr some_str;
        public uint str_len;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct ThirdPartyVecF32
    {
        public float x;
        public float y;
        public float z;
        public float w;
    }

    /// A vector used in our game engine.
    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct Vec3
    {
        public float x;
        public float y;
        public float z;
    }

    /// A type containing a third-party type.
    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct WithForeignType
    {
        public ulong secret_number;
        public IntPtr third_party;
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate uint InteropDelegate_fn_u32_rval_u32(uint x0);


}
